# This workflow builds and releases the MusicPlayer application for Windows
name: Build and Release MusicPlayer

on:
  push:
    branches: [ "master", "main" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "master", "main" ]

env:
  BUILD_TYPE: Release
  QT_VERSION: "6.8.1"

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: ${{ env.QT_VERSION }}
        host: windows
        target: desktop
        arch: win64_msvc2022_64
        modules: 'qtmultimedia'
        tools: tools_cmake
        cache: true

    - name: Setup MSVC
      uses: microsoft/setup-msbuild@v2

    - name: Configure CMake
      run: |
        cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_PREFIX_PATH="${{env.Qt6_DIR}}" -G "Visual Studio 17 2022" -A x64

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Deploy Qt Libraries
      run: |
        $env:PATH += ";${{env.Qt6_DIR}}/bin"
        mkdir release-package
        # 查找实际的exe文件位置
        $exePath = Get-ChildItem -Path "build" -Name "MusicPlayer.exe" -Recurse | Select-Object -First 1
        if ($exePath) {
          $fullPath = Join-Path "build" $exePath
          Write-Host "找到可执行文件: $fullPath"
          copy $fullPath release-package\
          windeployqt --release --no-translations --no-system-d3d-compiler --no-opengl-sw release-package\MusicPlayer.exe
        } else {
          Write-Host "可执行文件位置检查:"
          Get-ChildItem -Path "build" -Recurse -Include "*.exe" | ForEach-Object { Write-Host $_.FullName }
          throw "未找到 MusicPlayer.exe 文件"
        }

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: MusicPlayer-Windows-${{ github.sha }}
        path: release-package/

  release:
    needs: build-windows
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: MusicPlayer-Windows-${{ github.sha }}
        path: release-package/

    - name: Create ZIP package
      run: |
        cd release-package
        zip -r ../MusicPlayer-Windows-${{ github.ref_name }}.zip .

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: MusicPlayer-Windows-${{ github.ref_name }}.zip
        name: MusicPlayer ${{ github.ref_name }}
        body: |
          ## 🎵 MusicPlayer ${{ github.ref_name }}
          
          ### 新功能
          - 现代化的用户界面设计
          - 响应式布局，支持窗口大小调整
          - 支持FLAC和MP3格式音频播放
          - 音量控制和播放进度控制
          - 歌词显示功能
          
          ### 下载说明
          1. 下载 `MusicPlayer-Windows-${{ github.ref_name }}.zip`
          2. 解压到任意文件夹
          3. 双击运行 `MusicPlayer.exe`
          
          ### 系统要求
          - Windows 10/11 (64位)
          - 无需额外安装Qt运行时（已包含在发布包中）
          
          ### 使用方法
          1. 点击"打开文件夹"选择包含音乐文件的文件夹
          2. 双击音乐列表中的歌曲开始播放
          3. 使用播放控制按钮控制播放
          4. 拖拽进度条调整播放位置
          5. 点击"Voice"按钮显示/隐藏音量控制
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
